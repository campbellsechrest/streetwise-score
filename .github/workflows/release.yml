name: Solo Release

on:
  workflow_dispatch:
    inputs:
      bump:
        description: "Version bump (patch | minor | major)"
        required: false
        default: patch
  push:
    branches:
      - main
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  autotag:
    if: startsWith(github.ref, 'refs/heads/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # leave default persist-credentials: true so pushes use GITHUB_TOKEN
      - name: Set Git identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      - name: Fetch all tags
        run: |
          git fetch --tags --force
      - name: Compute next unique version
        id: ver
        shell: bash
        run: |
          set -euo pipefail

          # find last tag (or default)
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo v0.0.0)
          BUMP="${{ github.event.inputs.bump || 'patch' }}"
          BASE=${LAST_TAG#v}
          IFS='.' read -r MA MI PA <<< "$BASE"

          bump_once () {
            case "$BUMP" in
              major) MA=$((MA+1)); MI=0; PA=0 ;;
              minor) MI=$((MI+1)); PA=0 ;;
              *)     PA=$((PA+1)) ;;
            esac
          }

          bump_once
          NEXT="v${MA}.${MI}.${PA}"

          # ensure uniqueness: if tag exists, keep bumping patch until free
          while git rev-parse -q --verify "refs/tags/$NEXT" >/dev/null; do
            PA=$((PA+1))
            NEXT="v${MA}.${MI}.${PA}"
          done

          echo "last=$LAST_TAG" >> "$GITHUB_OUTPUT"
          echo "next=$NEXT" >> "$GITHUB_OUTPUT"
          echo "Computed next version: $NEXT"

      - name: Create and push tag
        env:
          # checkout@v4 set up origin auth with GITHUB_TOKEN automatically
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          TAG="${{ steps.ver.outputs.next }}"
          git tag -a "$TAG" -m "Release $TAG"
          git push origin "$TAG"

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Install gh
        run: |
          sudo apt-get update
          sudo apt-get install -y gh
      - name: Create GitHub Release (auto notes)
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create "$GITHUB_REF_NAME" \
            --title "$GITHUB_REF_NAME" \
            --generate-notes
